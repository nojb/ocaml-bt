# OASIS_START
# DO NOT EDIT (digest: bdff9a9aa0a1511be0637d68f7d9974f)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library bt
"bt/bt.cmxs": use_bt
"bt/bcode.cmx": for-pack(Bt)
"bt/SHA1.cmx": for-pack(Bt)
"bt/bits.cmx": for-pack(Bt)
"bt/incompleteMetadata.cmx": for-pack(Bt)
"bt/metadata.cmx": for-pack(Bt)
"bt/stats.cmx": for-pack(Bt)
"bt/KRPC.cmx": for-pack(Bt)
"bt/magnet.cmx": for-pack(Bt)
"bt/peer.cmx": for-pack(Bt)
"bt/store.cmx": for-pack(Bt)
"bt/tracker.cmx": for-pack(Bt)
"bt/util.cmx": for-pack(Bt)
"bt/torrent.cmx": for-pack(Bt)
"bt/peerMgr.cmx": for-pack(Bt)
"bt/choker.cmx": for-pack(Bt)
"bt/client.cmx": for-pack(Bt)
"bt/rate.cmx": for-pack(Bt)
"bt/addr.cmx": for-pack(Bt)
"bt/UDP.cmx": for-pack(Bt)
"bt/wire.cmx": for-pack(Bt)
"bt/IO.cmx": for-pack(Bt)
"bt/handshake.cmx": for-pack(Bt)
"bt/requester.cmx": for-pack(Bt)
"bt/DHT.cmx": for-pack(Bt)
"bt/kademlia.cmx": for-pack(Bt)
"bt/log.cmx": for-pack(Bt)
"bt/listener.cmx": for-pack(Bt)
<bt/*.ml{,i}>: pkg_bitstring
<bt/*.ml{,i}>: pkg_bitstring.syntax
<bt/*.ml{,i}>: pkg_cohttp
<bt/*.ml{,i}>: pkg_cohttp.lwt
<bt/*.ml{,i}>: pkg_cryptokit
<bt/*.ml{,i}>: pkg_lwt
<bt/*.ml{,i}>: pkg_lwt.unix
<bt/*.ml{,i}>: pkg_qcheck
<bt/*.ml{,i}>: pkg_uri
<bt/*.ml{,i}>: pkg_zarith
# Executable otorrent
<otorrent/otorrent.{native,byte}>: pkg_bitstring
<otorrent/otorrent.{native,byte}>: pkg_bitstring.syntax
<otorrent/otorrent.{native,byte}>: pkg_cmdliner
<otorrent/otorrent.{native,byte}>: pkg_cohttp
<otorrent/otorrent.{native,byte}>: pkg_cohttp.lwt
<otorrent/otorrent.{native,byte}>: pkg_cryptokit
<otorrent/otorrent.{native,byte}>: pkg_lwt
<otorrent/otorrent.{native,byte}>: pkg_lwt.unix
<otorrent/otorrent.{native,byte}>: pkg_qcheck
<otorrent/otorrent.{native,byte}>: pkg_uri
<otorrent/otorrent.{native,byte}>: pkg_zarith
<otorrent/otorrent.{native,byte}>: use_bt
<otorrent/*.ml{,i}>: pkg_bitstring
<otorrent/*.ml{,i}>: pkg_bitstring.syntax
<otorrent/*.ml{,i}>: pkg_cmdliner
<otorrent/*.ml{,i}>: pkg_cohttp
<otorrent/*.ml{,i}>: pkg_cohttp.lwt
<otorrent/*.ml{,i}>: pkg_cryptokit
<otorrent/*.ml{,i}>: pkg_lwt
<otorrent/*.ml{,i}>: pkg_lwt.unix
<otorrent/*.ml{,i}>: pkg_qcheck
<otorrent/*.ml{,i}>: pkg_uri
<otorrent/*.ml{,i}>: pkg_zarith
<otorrent/*.ml{,i}>: use_bt
<otorrent/otorrent.{native,byte}>: custom
# Executable find_ih
<examples/find_ih.{native,byte}>: pkg_bitstring
<examples/find_ih.{native,byte}>: pkg_bitstring.syntax
<examples/find_ih.{native,byte}>: pkg_cohttp
<examples/find_ih.{native,byte}>: pkg_cohttp.lwt
<examples/find_ih.{native,byte}>: pkg_cryptokit
<examples/find_ih.{native,byte}>: pkg_lwt
<examples/find_ih.{native,byte}>: pkg_lwt.unix
<examples/find_ih.{native,byte}>: pkg_qcheck
<examples/find_ih.{native,byte}>: pkg_uri
<examples/find_ih.{native,byte}>: pkg_zarith
<examples/find_ih.{native,byte}>: use_bt
<examples/*.ml{,i}>: pkg_bitstring
<examples/*.ml{,i}>: pkg_bitstring.syntax
<examples/*.ml{,i}>: pkg_cohttp
<examples/*.ml{,i}>: pkg_cohttp.lwt
<examples/*.ml{,i}>: pkg_cryptokit
<examples/*.ml{,i}>: pkg_lwt
<examples/*.ml{,i}>: pkg_lwt.unix
<examples/*.ml{,i}>: pkg_qcheck
<examples/*.ml{,i}>: pkg_uri
<examples/*.ml{,i}>: pkg_zarith
<examples/*.ml{,i}>: use_bt
<examples/find_ih.{native,byte}>: custom
# OASIS_STOP
# true: bin_annot
